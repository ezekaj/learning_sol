name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Verify environment variables
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        echo "Checking environment variables..."
        echo "GEMINI_API_KEY is set: $([[ -n "$GEMINI_API_KEY" ]] && echo "Yes" || echo "No")"
        echo "GEMINI_API_KEY length: ${#GEMINI_API_KEY}"

    - name: Build
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: npm run build

    - name: Check for large files
      run: |
        echo "üîç Checking for large files in build output..."
        find ./out -type f -size +50M -exec ls -lh {} \; | while read line; do
          echo "‚ùå Large file found: $line"
          exit 1
        done
        echo "‚úÖ No large files found in build output"

    - name: Verify build output
      run: |
        echo "üìä Build output summary:"
        du -sh ./out
        echo "üìÅ Build output structure:"
        find ./out -type f -name "*.js" -o -name "*.css" -o -name "*.html" | head -20

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./out

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      if: github.ref == 'refs/heads/main'
